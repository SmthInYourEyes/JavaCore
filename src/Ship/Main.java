package Ship;
import java.util.*;
import static Ship.SpaceShip.*;

/**
 * Двигатели кораблей использовали супер-топливо. У различных кораблей были различные объемы топливных баков, и поэтому заправлялись одни дольше, другие быстрее.
 * В каждом космопорте есть заправочная станция. Скорость передачи топлива в баки кораблей всегда одинаковая 1 единица за раз. Но корабль должен заправляться перед каждым вылетом.
 * В базовый класс кораблей добавить поле Топливный бак(если нет), которое принимает числовое значение.
 * В исполняемом методе создать 2 разных корабля с разным по объему топливным баком.
 * В исполняемом методе реализовать цикл FOR, While или DO while:
 * Выполнить для каждого из кораблей заправку топливного бака топливом пока он не станет полным.
 * <p>
 * вынести в отдельный метод
 * реализовать при помощи параметра заправку топливо на % от емкости бака
 */


/**
 * Многие корабли объединяются во флоты и эскадры, типы эскадр могут быть любые - как военные, так и торговые с исследовательскими. Это происходит для того, чтобы обороняться от пиратов, чтобы не путешествовать по космосу в одиночку и тд.
 * Эскадра представляет собой список объектов - корабль. Какие именно корабли в списке не имеет значения. Флотилия представляет собой множество эскадр
 * Необходимо реализовать добавление корабля в эскадру. Необходимо собрать группу кораблей в эскадру, реализовать флотилию и метод добавления эскадры ко флотилии.
 * Флотилию реализовать как мапу, в которой ключ - кодовое имя эскадры, а значение - эскадра.
 * При помощи класса Scanner реализовать вывод в консоль как описание отдельной эскадры, так и описание всей флотилии(использовать циклы) -
 * пользователь вводит кодовое имя эскадры - код выполяет вывод состава эскадры в консоль(тип корабля, какие-то другие поля по желанию, например придумать имя кораблю). Обработку непредвиденных ситуаций так же учесть(исключения)
 */

public class Main {
    public static void main(String[] args) {
        MilitarySpaceShip military1 = new MilitarySpaceShip(10, 20, 30, 5, "Мощный", "Средний");
        MilitarySpaceShip military2 = new MilitarySpaceShip(10, 20, 50, 5, "Слабый", " Мощный");
        MilitarySpaceShip military3 = new MilitarySpaceShip(50, 120, 99, 59, "Мощный", " Мощный");
        MilitarySpaceShip military4 = new MilitarySpaceShip(50, 11, 9, 9, "Слабый", " Слабый");
        TradeSpaceShip trade = new TradeSpaceShip(10, 22, 35, 10);

        squadron1.add(military1);
        squadron1.add(military2);
        squadron2.add(military3);
        squadron1.add(military4);
        flotilla.put("Normandy", squadron1);
        flotilla.put("Quarians", squadron2);


        Scanner scanner = new Scanner(System.in);
        while (true) {
            int i = Integer.parseInt(scanner.nextLine());
            if (i == 1) {
                System.out.println(squadron1);
                break;
            }
            if (i == 2) {
                System.out.println(squadron2);
                break;
            }
            if (i == 3) {
                System.out.println(flotilla);
                break;
            }
            if (i > 3) {
                throw new IndexOutOfBoundsException();
            }
        }

    }

}

